#!/usr/bin/env python

from __future__ import print_function

import os
import re

from rutabaga_css.css2c import RutabagaStylesheet
from waflib.Configure import conf
from waflib import TaskGen

css2c_prelude = """\
/**
 * rutabaga: an OpenGL widget toolkit
 * Copyright (c) 2013 William Light.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * this file was generated by css2c.py and you probably don't
 * want to edit it by hand.
 */

#pragma once
#include "rutabaga/style.h"

"""

def bin2h_task(bld, src, dst, var):
	bld(
		rule="python ../python/bin2h.py -p static -v %s < '${SRC}' > '${TGT}'" % var,
		source=[src],
		target=[dst],
		name="styles/default/assets",
		export_includes=".",
		update_outputs=True)


def do_css2c(task, css):
	task.outputs[0].write(css2c_prelude + css.c_repr())


#
# XXX: this is a tremendous hack but i don't give a fuck
#      maybe somebody who knows waf better than i do will
#      fix it someday
#

@conf
def rtb_style(self, style_name):
	css_path = "{0}/style.css".format(style_name)
	css_node = self.path.find_resource(css_path)

	css = RutabagaStylesheet(css_node)
	css.parse()

	for asset in css.embedded_assets:
		in_path  = "{0}/{1}".format(style_name, asset.path)
		out_path = in_path + ".h"

		bin2h_task(self, in_path, out_path, asset.variable_name)
		asset.header_path = "styles/" + out_path

	for asset in css.external_assets:
		# transform external asset paths into absolute paths
		path = "{0}/{1}".format(style_name, asset.path)
		node = self.path.find_resource(path)
		asset.path = node.abspath()

	self(rule=lambda task: do_css2c(task, css),
			source=css_path,
			target="{0}/style.h".format(style_name),
			name='styles/{0}'.format(style_name),
			export_includes=".",
			update_outputs=True)

def build(bld):
	bld.rtb_style("default")
