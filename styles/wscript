#!/usr/bin/env python

from __future__ import print_function

import os
import re

from css2c import RutabagaStylesheet

css2c_prelude = """\
/**
 * rutabaga: an OpenGL widget toolkit
 * Copyright (c) 2013 William Light.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * this file was generated by css2c.py and you probably don't
 * want to edit it by hand.
 */

#pragma once
#include "rutabaga/style.h"

"""

sanitize_cvar = re.compile(r"[.,-]")

def bin2h_task(bld, src, dst, var=None):
	if not var:
		var = sanitize_cvar.sub("_", os.path.basename(src)).upper()

	bld(
		rule="python ../python/bin2h.py -p static -v %s < ${SRC} > ${TGT}" % var,
		source=src,
		target=dst,
		name="styles/default/assets",
		export_includes=".",
		update_outputs=True)


def do_css2c(task):
	css = RutabagaStylesheet(task.inputs[0])
	css.parse()

	task.outputs[0].write(
			css2c_prelude + css.c_repr())


def css2c_task(bld, style_name):
	bld(
		rule=do_css2c,
		source="{0}/style.css".format(style_name),
		target="{0}/style.h".format(style_name),
		name='styles/{0}'.format(style_name),
		export_includes=".",
		update_outputs=True)


def build(bld):
	asset = lambda src, dst: bin2h_task(bld, src, dst)
	style = lambda style_name: css2c_task(bld, style_name)

	# textures
	asset("default/assets/tile.tga", "default/assets/tile.tga.h")

	# default style
	style("default")
