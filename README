                 __        __
     _______  __/ /_____ _/ /_  ____ _____ _____ _
    / ___/ / / / __/ __ `/ __ \/ __ `/ __ `/ __ `/
   / /  / /_/ / /_/ /_/ / /_/ / /_/ / /_/ / /_/ /
  /_/   \__,_/\__/\__,_/_.___/\__,_/\__, /\__,_/
                                   /____/

  rutabaga is an openGL widget toolkit in early stages
  of development. it is built against the openGL 3 core
  profile (i.e. no fixed function pipeline), licensed
  under the 2-clause BSD license, and implemented in
  plan9-flavoured C (anonymous structs, implicit
  upcasting for ease of OO-style development).

  currently it provides the skeletal components: a basic
  scene graph, event dispatching, rudimentary run-time
  type information, FreeType font rendering, and indirect
  rendering for performance.

  though openGL gives us a simple cross-platform drawing
  API, currently the only implemented backend is GLX 1.3
  implemented with XCB. i.e. we're linux and *bsd only
  right now.

  build with:

      ./waf configure
      ./waf

  run the examples from the build directory:

      ./build/examples/test
      ./build/examples/cabbage_patch

  `test` is a basic layout test application that displays
  a bunch of knobs and buttons.

  `cabbage_patch` is a patchbay for the JACK sound server
  and will only build if you have the JACK libraries and
  headers available.

  documentation is currently non-existent and the API is
  very much in flux. if the phrase "fixed-function
  pipeline" doesn't make sense to you, this is probably
  not the right time to play with rutabaga.

  questions, comments, and/or chili con carne recipies
  to wrl@illest.net.
