#!/usr/bin/env python

import os
import re

from glsl2h import write_shader_header

top = ".."

def glsl2h_task(bld, dest):
	def shader(task):
		write_shader_header(task.outputs[0], task.inputs)

	bld(
		rule=shader,
		source=["shaders/{0}.{1}.glsl".format(dest, kind) for kind in ("vert", "frag")],
		target="shaders/{0}.glsl.h".format(dest),
		name="shaders",
		export_includes=".",
		update_outputs=True)


def build(bld):
	bld(export_includes="../third-party/gl3w ../third-party . ..", name="private")
	bld(export_includes="../include", name="public")

	objs = []
	elem = lambda src: objs.append(src)

	#
	# platform
	#

	elem("platform/mouse.c")

	elem("platform/x11-xcb/event.c")
	elem("platform/x11-xcb/window.c")
	elem("platform/x11-xcb/keyboard.c")

	# common

	elem("rutabaga.c")
	elem("event.c")
	elem("atom.c")
	elem("quad.c")

	elem("asset.c")
	elem("style.c")

	elem("element.c")
	elem("surface.c")
	elem("window.c")

	elem("shader.c")
	elem("render.c")
	elem("mat4.c")

	elem("text/font-manager.c")
	elem("text/text-object.c")
	elem("text/text-buffer.c")

	elem("layout.c")

	if bld.env.RTB_LAYOUT_DEBUG:
		elem("devtools/layout-debug.c")

	# widgets

	elem("container.c")

	elem("widgets/label.c")
	elem("widgets/button.c")
	elem("widgets/knob.c")
	elem("widgets/text-input.c")

	elem("widgets/patchbay/canvas.c")
	elem("widgets/patchbay/node.c")
	elem("widgets/patchbay/port.c")

	# third party

	elem("../third-party/freetype-gl/texture-font.c")
	elem("../third-party/freetype-gl/texture-atlas.c")
	elem("../third-party/freetype-gl/vector.c")

	elem("../third-party/freetype-gl/vertex-buffer.c")
	elem("../third-party/freetype-gl/vertex-attribute.c")

	elem("../third-party/glloadgen/gl_core.3.0.c")

	# shaders

	shader = lambda dest: glsl2h_task(bld, dest)

	shader("default")
	shader("surface")
	shader("text")
	shader("patchbay-canvas")

	# outputs

	bld.stlib(
		source=objs,

		lib=['m'],
		use=[
			"private",
			"shaders",
			"public",
			"GL",
			"FREETYPE2",
			"X11",
			"XCB",
			"XCB-XKB",
			"XCB-KEYSYMS",
			"XCB-ICCCM",
			"XKBFILE",
			"XKBCOMMON"],

		target="rutabaga",
		name="librutabaga",
		vnum=bld.env.VERSION)
